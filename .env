# ---- DO NOT COMMIT SECRETS TO THIS FILE ----

# Environment variables shared between ci and DEV.

# NOTE: If you change this value remember to produce a new image by running the "CQ image" workflow.
# See https://github.com/guardian/service-catalogue/actions/workflows/cq-image.yml
# See https://github.com/cloudquery/cloudquery/releases?q=cli
CQ_CLI=6.15.0

# See https://hub.cloudquery.io/plugins/destination/cloudquery/postgresql/versions
CQ_POSTGRES_DESTINATION=7.2.0

# See https://github.com/cloudquery/cloudquery/releases?q=plugins-source-postgresql
CQ_POSTGRES_SOURCE=3.0.7

# See https://hub.cloudquery.io/plugins/source/cloudquery/aws/versions
CQ_AWS=27.5.0

# See https://hub.cloudquery.io/plugins/source/cloudquery/github/versions
CQ_GITHUB=11.11.1

# See https://hub.cloudquery.io/plugins/source/cloudquery/fastly/versions
CQ_FASTLY=3.0.7

# See https://github.com/guardian/cq-source-galaxies
CQ_GUARDIAN_GALAXIES=1.1.9

# See https://github.com/guardian/cq-source-github-languages
CQ_GITHUB_LANGUAGES=0.0.5

# See https://github.com/guardian/cq-source-ns1
CQ_NS1=0.1.4

# See https://github.com/guardian/cq-image-packages
CQ_IMAGE_PACKAGES=1.0.1

# --- FOR LOCAL DEVELOPMENT ONLY ---
STAGE=DEV
DATABASE_USER=postgres
DATABASE_PASSWORD=not_at_all_secret
DATABASE_HOSTNAME=localhost
DATABASE_NAME=postgres
DATABASE_PORT=5432
DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOSTNAME}:${DATABASE_PORT}/${DATABASE_NAME}

# Locally, CloudQuery and Postgres run within Docker.
# Hard-code the database hostname to 'postgres' (the Postgres container name), configuring CloudQuery to connect to Postgres via the Docker network.
CQ_DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@postgres:${DATABASE_PORT}/${DATABASE_NAME}

# Set this to 'false' to disable SQL query logging
QUERY_LOGGING=true

# Enables messaging from Repocop to Anghammarad for local testing
ENABLE_MESSAGING=false

INTERACTIVES_COUNT=3

STACK=deploy

CQ_API_KEY_PATH=/CODE/deploy/service-catalogue/cloudquery-api-key